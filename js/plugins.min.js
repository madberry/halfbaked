/**
* Plugins Script File
* @author: Rachel Baker
*
* Imports all jQuery plugin files prefixed with _ in same folder
*
* This file will be called automatically in the footer so as not to slow the page load.
*
*/// Avoid `console` errors in browsers that lack a console.
(!window.console || !console.log) && function() {
    var noop = function() {}, methods = [ "assert", "clear", "count", "debug", "dir", "dirxml", "error", "exception", "group", "groupCollapsed", "groupEnd", "info", "log", "markTimeline", "profile", "profileEnd", "markTimeline", "table", "time", "timeEnd", "timeStamp", "trace", "warn" ], length = methods.length, console = window.console = {};
    while (length--) console[methods[length]] = noop;
}();

(function($) {
    $.fn.Touchdown = function() {
        return this.each(function() {
            $this = $(this);
            var listDepth = $this.parents().length, anchor = $this.find("a"), title = "Navigate", optionList;
            $this.attr("title") && (title = $this.attr("title"));
            optionList += '<option value="">' + title + "</option>";
            for (var i = 0; i < anchor.length; i++) {
                var a = $(anchor[i]), linkDepth = (a.parents().length - listDepth) / 2 - 1, indent = "";
                while (linkDepth > 0) {
                    indent += "Â  ";
                    linkDepth--;
                }
                optionList += '<option value="' + a.attr("href") + '">' + indent + a.text() + "</option>";
            }
            $this.addClass("touchdown-list").after('<select class="touchdown"> ' + optionList + "</select>");
            $this.next("select").change(function() {
                window.location = $(this).val();
            });
        });
    };
})(jQuery);

(function($) {
    $.fn.horizontalNav = function(options) {
        var opts = $.extend({}, $.fn.horizontalNav.defaults, options);
        return this.each(function() {
            function trueInnerWidth(element) {
                return element.innerWidth() - (parseInt(element.css("padding-left")) + parseInt(element.css("padding-right")));
            }
            function resizeTrigger(callback, delay) {
                delay = delay || 100;
                var resizeTimer;
                $(window).resize(function() {
                    clearTimeout(resizeTimer);
                    resizeTimer = setTimeout(function() {
                        callback();
                    }, delay);
                });
            }
            function _construct() {
                if (o.tableDisplay != 1 || $.browser.msie && parseInt($.browser.version, 10) <= 7) {
                    ul.css({
                        "float": "left"
                    });
                    li.css({
                        "float": "left",
                        width: "auto"
                    });
                    li_a.css({
                        "padding-left": 0,
                        "padding-right": 0
                    });
                    var ul_width = trueInnerWidth(ul), ul_width_outer = ul.outerWidth(!0), ul_width_extra = ul_width_outer - ul_width, full_width = trueInnerWidth(ul_wrap), extra_width = full_width - ul_width_extra - ul_width, li_padding = Math.floor(extra_width / li_count);
                    li.each(function(index) {
                        var li_width = trueInnerWidth($(this));
                        $(this).css({
                            width: li_width + li_padding + "px"
                        });
                    });
                    var li_last_width = trueInnerWidth(li_last) + (full_width - ul_width_extra - trueInnerWidth(ul));
                    if ($.browser.mozilla || $.browser.msie) li_last_width -= 1;
                    li_last.css({
                        width: li_last_width + "px"
                    });
                } else {
                    ul.css({
                        display: "table",
                        "float": "none",
                        width: "100%"
                    });
                    li.css({
                        display: "table-cell",
                        "float": "none"
                    });
                }
            }
            var $this = $(this), o = $.meta ? $.extend({}, opts, $this.data()) : opts;
            if ($this.is("ul")) var ul_wrap = $this.parent(); else var ul_wrap = $this;
            if ($(".clearHorizontalNav").length) ul_wrap.css({
                zoom: "1"
            }); else {
                ul_wrap.css({
                    zoom: "1"
                }).append('<div class="clearHorizontalNav">');
                $(".clearHorizontalNav").css({
                    display: "block",
                    overflow: "hidden",
                    visibility: "hidden",
                    width: 0,
                    height: 0,
                    clear: "both"
                });
            }
            var ul = $this.is("ul") ? $this : ul_wrap.find("> ul"), li = ul.find("> li"), li_last = li.last(), li_count = li.size(), li_a = li.find("> a");
            o.responsive === !0 && (o.tableDisplay != 1 || $.browser.msie && parseInt($.browser.version, 10) <= 7) && resizeTrigger(_construct, o.responsiveDelay);
            _construct();
        });
    };
    $.fn.horizontalNav.defaults = {
        responsive: !0,
        responsiveDelay: 100,
        tableDisplay: !0
    };
})(jQuery);